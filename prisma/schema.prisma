generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BotResponse {
  id           String    @id
  messageId    String
  chatId       String
  assistantId  String
  content      String
  responseType String
  threadId     String
  sentAt       DateTime  @default(now())
  UserState    UserState @relation(fields: [chatId], references: [chatId], onDelete: Cascade)
  Message      Message   @relation(fields: [messageId], references: [id], onDelete: Cascade)
}

model Feedback {
  feedbackId     String   @id
  username       String?
  phoneNumber    String?
  userEmail      String?
  content        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  reachRateLimit Boolean?
  wannaHelp      Boolean?
}

model Message {
  id          String        @id
  chatId      String
  content     String
  messageType String
  receivedAt  DateTime      @default(now())
  threadId    String
  BotResponse BotResponse[]
  UserState   UserState     @relation(fields: [chatId], references: [chatId], onDelete: Cascade)
}

model UserState {
  chatId        String        @id
  messageCount  Int           @default(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  rateLimit     Int           @default(0)
  isOnCooldown  Boolean       @default(false)
  cooldownCount Int           @default(0)
  threadId      String?
  acceptedTerms Boolean       @default(false)
  BotResponse   BotResponse[]
  Message       Message[]
}

model whatsapp_sessions {
  id         Int      @id @default(autoincrement())
  session_id String   @unique
  data       String
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}
